## Script to generate mapping for state visualization data

setwd("D:/Programming/R/BigDataAnalytics/data/countries-map")

#install.packages("rgdal")
#install.packages("sp")
#install.packages("data.table")
#install.packages("RMariaDB")
#install.packages("tidyr")

library(sp)
library(rgdal)
library(data.table)
library(RMariaDB)
library(tidyr)

#define variables
dbuser='bdauser'
dbpassword='BDA4ever!!!'
dbname='bigdatadb'
dbhost='35.193.193.138'

# select the desired parameter
parameter = "pm10"

#read custom dictionary file
state_state_dict <- fread("data/state_gadm_dict_cleaned.csv", encoding="UTF-8")
state_state_dict = state_state_dict[, country := toupper(country)]
state_state_dict = seperate_rows(state_state_dict, "", sep=";", convert=FALSE)

#get openaq data
bigdatadb <- dbConnect(RMariaDB::MariaDB(), user=dbuser, password=dbpassword, dbname=dbname, host=dbhost)
#execute the query
res <- dbSendQuery(bigdatadb, paste0("SELECT country, state, AVG(value) FROM openaq WHERE parameter = '", parameter, "' GROUP BY country, state")
openaq_data = dbFetch(res)
#close connection to database
dbClearResult(res)
dbDisconnect(bigdatadb)

#read GADM data
gadm <-  readOGR("data/gadm36_levels_gpkg/gadm36_levels.gpkg", "level1", encoding="UTF-8", use_iconv=TRUE)

#simplify poligons for faster plotting
for(i in 1:length(map@polygons)){
  for(j in 1:length(map@polygons[[i]]@Polygons)){
    temp <- as.data.frame(map@polygons[[i]]@Polygons[[j]]@coords)
    names(temp) <- c("x", "y")
    temp2 <- dp(temp, 0.01)
    map@polygons[[i]]@Polygons[[j]]@coords <- as.matrix(cbind(temp2$x, temp2$y))
  }
}

#create gadm_data
gadm_data <- as.data.table(gadm@data)
gadm_data = gadm_data[, CountryCode := toupper(substr(HASC_1, 1, 2))]
gadm_data = gadm_data[is.na(CountryCode), CountryCode := tolower(substr(GID_0, 1, 2))]
gadm_data = gadm_data[NAME_0 == "Mayotte", CountryCode := "YT"]
gadm_data = gadm_data[NAME_0 == "Poland", CountryCode := "PL"]
gadm_data = gadm_data[NAME_0 == "Northern Cyprus", CountryCode := "CY"]
gadm_data = gadm_data[NAME_0 == "Latvia", CountryCode := "LV"]
gadm_data = gadm_data[NAME_0 == "United States Minor Outlying Islands", CountryCode := "US"]

#prepare plot color vector
plot_color <- merge(openaq_data, state_state_dict, by.x =c("country", "state"), by.y = c("CountryCode", ""), all.x = TRUE)
plot_color = plot_color[, value:= mean(value), by= .(state, country)]
plot_color = merge(gadm_data, plot_color, by.x=c("CountryCode", "State"), by.y = c("CountryCode", "state"), all.x = TRUE)
plot_color = plot_color[, value]

#plot worldmap
png(filename= paste0("plot_wolrd_", parameter, ".png"))
plot(gadm, col = plot_color, border = 'darkgrey')
dev.off()